#!/usr/bin/env python3
"""Test multi-agent vulnerability assessment with browser-use"""

import asyncio
import os
import sys

# Add the src directory to the path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from manus_use.multi_agents.orchestrator import Orchestrator
from manus_use.config import Config

async def main():
    """Test orchestrator with vulnerability assessment"""
    # Load config and set headless=False for browser
    config = Config.from_file()
    config.browser_use.headless = False
    
    orchestrator = Orchestrator(config=config)
    
    # The actual task
    task = "Assess the latest 2 vulnerabilities in May 2025"
    
    print(f"\nüîç Running multi-agent task: {task}")
    print("=" * 60)
    
    try:
        result = await orchestrator.run_async(task)
        
        if result.success:
            print(f"\n‚úÖ Success!")
            print(f"Output: {result.output}")
        else:
            print(f"\n‚ùå Failed!")
            print(f"Error: {result.error}")
            
    except Exception as e:
        print(f"\n‚ùå Exception: {type(e).__name__}: {str(e)}")
        import traceback
        traceback.print_exc()
    
    finally:
        # Cleanup if needed
        print("\nüßπ Cleaning up...")

if __name__ == "__main__":
    asyncio.run(main())