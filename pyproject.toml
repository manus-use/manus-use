[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "manus-use"
version = "0.1.0"
description = "A powerful framework for building advanced AI agents with comprehensive tool support and orchestration capabilities"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "manus-use Contributors"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "strands-agents>=0.1.4",
    "strands-agents-tools>=0.1.0",
    "aiofiles>=24.1.0",
    "docker>=7.1.0",
    "playwright>=1.49.1",
    "pydantic>=2.0.0",
    "toml>=0.10.2",
    "rich>=13.9.4",
    "httpx>=0.28.1",
    "beautifulsoup4>=4.12.3",
    "duckduckgo-search>=6.3.7",
    "pandas>=2.2.3",
    "matplotlib>=3.7.2",
    "seaborn>=0.13.2",
    "plotly>=5.24.1",
    "kaleido>=0.2.1",
    "langchain-aws>=0.2.11",
]

[project.urls]
Homepage = "https://github.com/manus-use/manus-use"
"Bug Tracker" = "https://github.com/manus-use/manus-use/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/manus_use"]

[project.optional-dependencies]
dev = [
    "hatch>=1.0.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.4.4",
    "mypy>=1.15.0",
    "pre-commit>=3.2.0",
]
browser = [
    "playwright>=1.49.1",
    "browser-use>=1.0.16",
    "markdownify>=0.12.1",
    "langchain-aws>=0.2.11",
]
search = [
    "duckduckgo-search>=6.3.7",
    "googlesearch-python>=1.2.5",
]
visualization = [
    "pandas>=2.2.3",
    "matplotlib>=3.7.2",
    "seaborn>=0.13.2",
    "plotly>=5.24.1",
    "kaleido>=0.2.1",
]

[project.scripts]
manus-use = "manus_use.cli:main"

[tool.hatch.envs.default]
features = ["dev", "browser", "search", "visualization"]

[tool.hatch.envs.default.scripts]
test = "pytest tests/ -v"
test-cov = "pytest tests/ --cov=manus_use --cov-report=html"
lint = "ruff check src/ tests/"
format = "ruff format src/ tests/"
typecheck = "mypy src/"

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B", "UP"]
ignore = ["E501"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true